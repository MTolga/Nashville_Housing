select * from Portfolio.dbo.Nashville


-- Standartize Date Format

SELECT SaleDate, CONVERT(Date,SaleDate) FROM Nashville

ALTER TABLE Nashville
ADD SaleDateConverted Date

UPDATE Nashville
SET SaleDateConverted = CONVERT(Date,SaleDate)

SELECT SaleDateConverted, CONVERT(Date,SaleDate) FROM Nashville


-- Populate Property Address

/*Some ParcelIDs are duplicated and one of two has PropertyAdress as other indicated NULL in PropertyAddress
To take a look at the blanks in the PropertyAddress, I combine(JOIN) the table with itself. Then I use ISNULL function to populate.
*/

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
from Nashville a
JOIN Nashville b
	ON a.ParcelID = b.ParcelID
	and a.[UniqueID ] <> b.[UniqueID ]
WHERE a.PropertyAddress is null
ORDER BY a.ParcelID 

/* Update the ProperyAddress column as the query above */

UPDATE a
SET a.PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
from Nashville a
JOIN Nashville b
	ON a.ParcelID = b.ParcelID
	and a.[UniqueID ] <> b.[UniqueID ]
WHERE a.PropertyAddress is null






-- Breaking out address into separate columns (address, city, state)

SELECT OwnerAddress, 
	REVERSE(PARSENAME(REPLACE(REVERSE(OwnerAddress), ',', '.'), 1)) AS OwnerStreet,
	REVERSE(PARSENAME(REPLACE(REVERSE(OwnerAddress), ',', '.'), 2)) AS OwnerCity,
	REVERSE(PARSENAME(REPLACE(REVERSE(OwnerAddress), ',', '.'), 3)) AS OwnerState 
FROM Portfolio.dbo.Nashville

/* Add new separated columns */
ALTER TABLE Portfolio.dbo.Nashville
ADD OwnerStreet Nvarchar(255)

UPDATE Portfolio.dbo.Nashville
SET OwnerStreet = REVERSE(PARSENAME(REPLACE(REVERSE(OwnerAddress), ',', '.'), 1))

ALTER TABLE Portfolio.dbo.Nashville
ADD OwnerCity Nvarchar(255)

UPDATE Portfolio.dbo.Nashville
SET OwnerCity = REVERSE(PARSENAME(REPLACE(REVERSE(OwnerAddress), ',', '.'), 2))

ALTER TABLE Portfolio.dbo.Nashville
ADD OwnerState Nvarchar(255)

UPDATE Portfolio.dbo.Nashville
SET OwnerState = REVERSE(PARSENAME(REPLACE(REVERSE(OwnerAddress), ',', '.'), 3))

/* Add new separated columns for PropertyAddres*/

SELECT PropertyAddress, 
	REVERSE(PARSENAME(REPLACE(REVERSE(PropertyAddress), ',', '.'), 1)) AS PropertyStreet,
	REVERSE(PARSENAME(REPLACE(REVERSE(PropertyAddress), ',', '.'), 2)) AS PropertyCity
FROM Portfolio.dbo.Nashville

ALTER TABLE Portfolio.dbo.Nashville
ADD PropertyStreet Nvarchar(255)

UPDATE Portfolio.dbo.Nashville
SET PropertyStreet = REVERSE(PARSENAME(REPLACE(REVERSE(PropertyAddress), ',', '.'), 1))

ALTER TABLE Portfolio.dbo.Nashville
ADD PropertyCity Nvarchar(255)

UPDATE Portfolio.dbo.Nashville
SET PropertyCity = REVERSE(PARSENAME(REPLACE(REVERSE(PropertyAddress), ',', '.'), 2))





-- Change Y and N to Yes and No in "SoldAsVacant" field

SELECT DISTINCT(SoldAsVacant),COUNT(SoldAsVacant)
from Portfolio.dbo.Nashville
GROUP BY SoldAsVacant

UPDATE Portfolio.dbo.Nashville
SET SoldAsVacant='No'
WHERE SoldAsVacant='N' 

UPDATE Portfolio.dbo.Nashville
SET SoldAsVacant='Yes'
WHERE SoldAsVacant='Y' 

/* The other way to update is to use CASE statement

SELECT SoldAsVacant,
	CASE WHEN SoldAsVacant='Y' THEN 'Yes'
	CASE WHEN SoldAsVacant='N' THEN 'No'
	ELSE SoldAsVacant
	END
from Portfolio.dbo.Nashville

*/






-- Remove Duplicates

SELECT * FROM Portfolio.dbo.Nashville


WITH RowNTable AS
(SELECT *, ROW_NUMBER() OVER
			(PARTITION BY ParcelID,
						 SaleDate,
						 SalePrice,
						 LegalReference,
						 OwnerName,
						 LandValue
					   ORDER BY ParcelID
					   ) RowN
FROM Portfolio.dbo.Nashville) 
DELETE FROM RowNTable
WHERE RowN>1






-- Delete unused columns

SELECT * FROM Portfolio.dbo.Nashville

ALTER TABLE Portfolio.dbo.Nashville
DROP COLUMN OwnerAddress,SaleDate,TaxDistrict 

ALTER TABLE Portfolio.dbo.Nashville
DROP COLUMN PropertyAddress,LegalReference

ALTER TABLE Portfolio.dbo.Nashville
DROP COLUMN OwnerName




